using namespace std;
int mod=(int)(1e9+7);
int findWays(vector<int> &num, int k){
    int n = num.size();
    vector<int> prev(k+1,0);
    prev[0] =1;
    if(num[0]<=k)
        prev[num[0]] = 1;
    for(int ind = 1; ind<n; ind++){
        vector<int> cur(k+1,0);
        cur[0]=1;
        for(int target= 1; target<=k; target++){  
            int notTaken = prev[target];
            int taken = 0;
                if(num[ind]<=target)
                    taken = prev[target-num[ind]];
            cur[target]= (notTaken + taken)%mod;
        }
        prev = cur;
    }
    return prev[k];  
}


//Time Complexity: O(N*K)
//Space Complexity: O(K)
