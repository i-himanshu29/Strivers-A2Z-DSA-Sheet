vector<int> printingLongestIncreasingSubsequence(vector<int> arr, int n) {
	// Write your code here
	vector<int>dp(n,1);
	vector<int>hash(n);
	
	int maxi=1;
	int lastindex=0;

	for(int i=0;i<n;i++)
	{
		hash[i]=i;
		for(int prev=0;prev<i;prev++)
		{
			if(arr[i]>arr[prev] && dp[i]<1+dp[prev])
			{
				dp[i]=1+dp[prev];
				hash[i]=prev;
			}
		}
		if(dp[i]>maxi)
		{
			maxi=dp[i];
			lastindex=i;
		}

	}

	vector<int>ans;
	ans.push_back(arr[lastindex]);

	while(lastindex != hash[lastindex])
	{
		lastindex=hash[lastindex];
		ans.push_back(arr[lastindex]);
	}
	reverse(ans.begin(),ans.end());
	return ans;

}
