int cutRod(vector<int> &price, int n)
{
	vector<int>prev(n+1,0),cur(n+1,0);
	for(int N=0;N<=n;N++){
		prev[N]=N*price[0];
	}
	for(int ind=1;ind<n ;ind++){
		for(int N=0;N<=n;N++){
			int notTake=0+prev[N];
	        int take=INT_MIN;
	        int rodLength=ind+1;
            if (rodLength <= N) {
                take = price[ind] + cur[N-rodLength];
        }
         cur[N]= max(take,notTake);
		}
		prev=cur;
	}
	return prev[n];
	
}



/*
Time Complexity: O(N*N)
Reason: There are two nested loops.

Space Complexity: O(N)
Reason: We are using an external array of size ‘N+1’ to store only one row.
*/
