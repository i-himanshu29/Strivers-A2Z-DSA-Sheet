/*
PROBLEM:
We are given an array ‘ARR’ with N positive integers. We need to find if we can partition the array into two subsets such that
the sum of elements of each subset is equal to the other.
If we can partition, return true else return false
*/


#include<bits/stdc++.h>
using namespace std;

bool f(vector<int>& arr,int ind,int target){
	if(target==0) return true;
	if(ind==0){
		if(target==arr[ind]) return true;
		return false;
	}
	int pick=0;
	if(arr[ind]<=target) pick=f(arr,ind-1,target-arr[ind]);
	int notpick=f(arr,ind-1,target);
	return pick || notpick;
}
bool canPartition(vector<int> &arr, int n)
{
	int totsum=0;
	for(int i=0;i<n;i++){
		totsum+=arr[i];
	}
	if(totsum%2!=0) return false;
	int k=totsum/2;
	return f(arr,n-1,k);
}



//It gives TLE.
// Solve on Coding Ninja
