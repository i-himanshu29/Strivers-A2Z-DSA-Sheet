/*
  PROBLEM:
We are given a Triangular matrix. We need to find the minimum path sum from the first row to the last row.
At every cell we can move in only two directions: either to the bottom cell (↓) or to the bottom-right cell(↘)
*/


#include <bits/stdc++.h> 
int f(int i,int j,vector<vector<int>>triangle, int n){
	if(i==n-1) return triangle[n-1][j];

	int down=triangle[i][j]+f(i+1,j,triangle,n);
	int digonal= triangle[i][j]+f(i+1,j+1,triangle,n);

	return min(down,digonal);
}
int minimumPathSum(vector<vector<int>>& triangle, int n){
	// Write your code here.
	return f(0,0,triangle,n);
}


//It gives TLE.
//SOLVE on Coding Ninja
