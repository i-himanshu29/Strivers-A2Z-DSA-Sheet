#include <bits/stdc++.h>
using namespace std;
int maximumProfit(vector<int>& Arr, int n, int k)
{
    vector<vector<int>> ahead(2,vector<int> (k+1,0));   
    vector<vector<int>> cur(2,vector<int> (k+1,0));
    for(int ind = n-1; ind>=0; ind--){
        for(int buy = 0; buy<=1; buy++){
            for(int cap=1; cap<=k; cap++){
                if(buy==0){// We can buy the stock
                    cur[buy][cap] = max(0+ahead[0][cap], -Arr[ind] + ahead[1][cap]);
                 }
    
                if(buy==1){// We can sell the stock
                    cur[buy][cap] = max(0+ahead[1][cap],Arr[ind] + ahead[0][cap-1]);
                }
            }
        }
        ahead = cur;
    }
    
    return ahead[0][k];
   
}


/*

Time Complexity: O(N*2*K)
Reason: There are three nested loops that account for O(N*2*K) complexity

Space Complexity: O(K)
Reason: We are using two external arrays of size ‘2*K’.

*/
