/*
PROBLEM:
Given two values M and N, which represent a matrix[M][N]. We need to find the total unique paths from the top-left
cell (matrix[0][0]) to the rightmost cell (matrix[M-1][N-1]).
At any cell we are allowed to move in only two directions:- bottom and right.
*/


#include <bits/stdc++.h> 
using namespace std;
int f(int i,int j){
	if(i==0 && j==0) return 1;
	if(i<0 || j<0) return 0;

	int up= f(i-1,j);
	int left=f(i,j-1);
	return up+left;
}
int uniquePaths(int m, int n) {
	f(m-1,n-1);
}

// It gives TLE.
//Solve On Coding Ninja
