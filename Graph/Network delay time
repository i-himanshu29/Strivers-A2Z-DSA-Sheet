#include<bits/stdc++.h>

int networkDelayTime(vector<vector<int>> &edges, int n, int k)
{
    // Write your code here.
     vector<pair<int,int>>adj[n+1];

      for(int i=0;i<edges.size();i++){

          int u = edges[i][0];

          int v = edges[i][1];

          int wt = edges[i][2];

          adj[u].push_back({v,wt});

      }

      priority_queue<pair<int,int>,

      vector<pair<int,int>>,

      greater<pair<int,int>>>pq;

      pq.push({0,k});

      vector<int>dist(n+1,1e9);

      dist[k]=0;

      while(!pq.empty()){

          int dis = pq.top().first;

          int node = pq.top().second;

          pq.pop();

          for(auto it:adj[node]){

              int adjnode = it.first;

              int wt = it.second;

              if(dist[adjnode] > dis+wt){

                  dist[adjnode] = dis+wt;

                  pq.push({dis+wt,adjnode});

              }

          }

      }

      int ans=0;

      for(int i=1;i<=n;i++){

          if(dist[i]==1e9)

          return -1;

          ans = max(ans,dist[i]);

      }

      return ans;
}

//SOLVE ON CODING NINJA
